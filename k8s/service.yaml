apiVersion: v1
kind: Service
metadata:
  name: spring-boot-api
  namespace: {{NAMESPACE}}
  labels:
    app: spring-boot-api
    component: backend
    environment: {{NAMESPACE}}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/actuator/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: actuator
    port: 8081
    targetPort: actuator
    protocol: TCP
  selector:
    app: spring-boot-api
    version: v1
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-api-headless
  namespace: {{NAMESPACE}}
  labels:
    app: spring-boot-api
    component: backend
    environment: {{NAMESPACE}}
    service-type: headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  selector:
    app: spring-boot-api
    version: v1
---
# Service Monitor for Prometheus scraping (if using Prometheus Operator)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: spring-boot-api-metrics
  namespace: {{NAMESPACE}}
  labels:
    app: spring-boot-api
    component: backend
    environment: {{NAMESPACE}}
spec:
  selector:
    matchLabels:
      app: spring-boot-api
  endpoints:
  - port: actuator
    interval: 30s
    path: /actuator/prometheus
    honorLabels: true 